<?php

/**
 * @file
 *
 * Create an owl carousel based on fields instead of view.
 */


/**
 * Implements hook_library().
 */
function owlcarousel2_library() {
  $library = libraries_get_path('owl.carousel2');

  $libraries['owlcarousel2'] = array(
    'title' => 'Owl Carousel 2',
    'website' => 'http://owlgraphic.com/owlcarousel',
    'version' => array(),
    'js' => array(
      $library . '/owl.carousel.min.js' => array(
        'scope' => 'footer',
      ),
    ),
    'css' => array(
      $library . '/assets/owl.carousel.css' => array(
        'type' => 'file',
        'media' => 'screen',
      ),
      drupal_get_path(
        'module',
        'owlcarousel2'
      ) . '/css/owlcarousel2.css' => array(
        'type' => 'file',
        'media' => 'screen',
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_theme_registry_alter().
 */
function owlcarousel2_theme_registry_alter(&$theme_registry) {
  $mod_path = drupal_get_path('module', 'owlcarousel2') . '/templates';
  $theme_registry_copy = $theme_registry;       // munge on a copy
  _theme_process_registry(
    $theme_registry_copy,
    'phptemplate',
    'theme_engine',
    'pow',
    $mod_path
  );
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
  /*$hooks = array('node', 'block');
  foreach ($hooks as $h) {
    _owlcarousel2_insert_after_first_element(
      $theme_registry[$h]['theme paths'],
      $mod_path
    );
  }*/
}

/**
 * Helper function for re-ordering arrays (needed by theme_registry_alter)
 */
function _owlcarousel2_insert_after_first_element(&$a, $element) {
  if (is_array($a)) {
    $first_element = array_shift($a);
    array_unshift($a, $first_element, $element);
  }
}

/**
 * Implements hook_preprocess_node().
 */
function owlcarousel2_preprocess_node(&$variables) {
  if ($variables['type'] == 'owl_carousel_slideshow') {
    $owl_slide = &$variables['content']['field_owl_carousel_slide'];

    $owl_slide['#attached']['library'][] = array(
      'owlcarousel2',
      'owlcarousel2'
    );

    $module_path = drupal_get_path('module', 'owlcarousel2');
    $owl_slide['#attached']['js'][$module_path . '/js/owlcarousel2.node.js'] = array(
      'scope' => 'footer',
    );
  }
  elseif ($variables['type'] == 'owl_carousel_slide') {
    $variables['page'] = TRUE;
  }
}

/**
 * Implements hook_node_view_alter().
 */
function owlcarousel2_node_view_alter(&$build) {
  if ($build['#bundle'] == 'owl_carousel_slideshow') {
    $node = $build['#node'];

    module_load_include('inc', 'owlcarousel2', 'owlcarousel2.pages');
    $settings = owlcarousel2_get_settings($node->nid);
    $options = owlcarousel2_get_options_from_settings($settings);

    if (sizeof($options)) {
      $js_settings = array();
      $js_settings['node-' . $node->nid] = $options;
      $build['field_owl_carousel_slide']['#attached']['js'][] = array(
        'data' => array('owlcarousel2' => $js_settings),
        'type' => 'setting',
      );
    }
  }
}

/**
 * Implements hook_views_api().
 */
function owlcarousel2_views_api() {
  return array('api' => 3);
}

/**
 * Implements hook_theme().
 */
function owlcarousel2_theme($existing, $type, $theme, $path) {
  return array(
    'owlcarousel2' => array(
      'variables' => array(
        'id' => NULL,
        'items' => array(),
        'options' => array(),
      ),
      'path' => drupal_get_path('module', 'owlcarousel2') . '/theme',
      'file' => 'owlcarousel2.theme.inc',
    ),
    'owlcarousel2_item_form_table' => array(
      'render element' => 'element',
      'path' => drupal_get_path('module', 'owlcarousel2') . '/theme',
      'file' => 'owlcarousel2.theme.inc',
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter() for owl_carousel_slideshow_node_form.
 */
function owlcarousel2_form_owl_carousel_slideshow_node_form_alter(
  &$form,
  &$form_state
) {
  $settings = array();
  if (isset($form['nid']['#value'])) {
    module_load_include('inc', 'owlcarousel2', 'owlcarousel2.pages');
    $settings = owlcarousel2_get_settings($form['nid']['#value']);
  }

  form_load_include($form_state, 'inc', 'owlcarousel2', 'owlcarousel2.form');
  owlcarousel2_base_form($form, $form_state, $settings);

  $form['#validate'][] = 'owlcarousel2_slideshow_node_form_validate';
  $form['#submit'][] = 'owlcarousel2_slideshow_node_form_submit';
}

/**
 * Validation handler for slideshow node form.
 *
 * @param array $form
 *   Form array.
 * @param array $form_state
 *   Form state array.
 */
function owlcarousel2_slideshow_node_form_validate(&$form, &$form_state) {
  form_load_include($form_state, 'inc', 'owlcarousel2', 'owlcarousel2.form');
  owlcarousel2_base_form_validate($form, $form_state);
}

/**
 * Submit handler for slideshow node form.
 *
 * @param array $form
 *   Form array.
 * @param array $form_state
 *   Form state array.
 */
function owlcarousel2_slideshow_node_form_submit($form, &$form_state) {
  if (!empty($form_state['values']['nid']) && !empty($form_state['values']['settings'])) {
    $nid = $form_state['values']['nid'];
    $settings = $form_state['values']['settings'];
    owlcarousel2_save_settings($nid, $settings);
  }
  /*elseif (!empty($form_state['field'])) {
    // This is if the slideshow is within an inline entity form.
    foreach ($form_state['field'] as $field_name => $field) {
      $field_info = $field[LANGUAGE_NONE]['field'];
      $instance = $field[LANGUAGE_NONE]['instance'];
      $type = $field_info['type'];
      $widget = $instance['widget']['type'];
      if ($type == 'entityreference' && $widget == 'inline_entity_form') {
        $target_type = $field_info['settings']['target_type'];
        $target_bundles = array_keys(
          $field_info['settings']['handler_settings']['target_bundles']
        );
        if ($target_type == 'node' && in_array(
            'owl_carousel_slideshow',
            $target_bundles
          )
        ) {
          // We need to check the slideshow settings.
          $bundle = $form_state['values'][$field_name][LANGUAGE_NONE]['actions']['bundle'];
          if ($bundle == 'owl_carousel_slideshow') {
            foreach ($form_state['values'][$field_name][LANGUAGE_NONE]['entities'] as $index => $field_array) {
              $field_form = $field_array['form'];
              $config = $field_form['settings'];
            }
          }
        }
      }
    }
  }*/
}

/**
 * Implements hook_node_delete().
 */
function owlcarousel2_node_delete($node) {
  db_delete('owlcarousel2_settings')
    ->condition('nid', $node->nid)
    ->execute();
}

function owlcarousel2_preprocess_block(&$vars) {
  if ($vars['block']->module == 'views') {
    list($view_name, $display_id) = explode('-', $vars['block']->delta);
    $view = views_get_view($view_name);
    $display = $view->display;
    $style_plugin = !empty($display[$display_id]->display_options['style_plugin']) ? $display[$display_id]->display_options['style_plugin'] : $display['default']->display_options['style_plugin'];

    $theme_suggestions = $vars['theme_hook_suggestions'];
    $last_suggestion = array_pop($theme_suggestions);
    $theme_suggestions[] = 'block__views__' . $style_plugin;
    $theme_suggestions[] = $last_suggestion;
    $theme_suggestions[] = 'block__views__' . $style_plugin . '__' . $view_name . '_' . $display_id;
    $vars['theme_hook_suggestions'] = $theme_suggestions;
  }
  elseif ($vars['block']->module == 'nodeblock') {
    $node = $vars['block']->{'#node'};

    $theme_suggestions = $vars['theme_hook_suggestions'];
    $last_suggestion = array_pop($theme_suggestions);
    $theme_suggestions[] = 'block__nodeblock__' . $node->type;
    $theme_suggestions[] = $last_suggestion;
    $vars['theme_hook_suggestions'] = $theme_suggestions;
  }
}

/**
 * Implements hook_block_view_alter().
 */
function owlcarousel2_block_view_alter(&$data, $block) {
  if ($block->module == 'views') {
    list($view_name, $display_id) = explode('-', $block->delta);
    $view = views_get_view($view_name);
    $display = $view->display;
    $style_plugin = !empty($display[$display_id]->display_options['style_plugin']) ? $display[$display_id]->display_options['style_plugin'] : $display['default']->display_options['style_plugin'];

    if ($style_plugin == 'owlcarousel2') {
      $options = !empty($display[$display_id]->display_options['style_options']) ? $display[$display_id]->display_options['style_options'] : $display['default']->display_options['style_options'];
      if ($options['nav'] && $options['nav_in_block_heading']) {
        $output = array(
          '#prefix' => '<div class="owl-block-nav">',
          '#suffix' => '</div>',
          'prev' => array(
            '#prefix' => '<div class="owl-block-prev" name="views-' . $view_name . '-' . $display_id . '">',
            '#suffix' => '</div>',
            '#markup' => $options['nav_prev_text'],
          ),
          'next' => array(
            '#prefix' => '<div class="owl-block-next" name="views-' . $view_name . '-' . $display_id . '">',
            '#suffix' => '</div>',
            '#markup' => $options['nav_next_text'],
          ),
          '#attached' => array(
            'js' => array(
              drupal_get_path(
                'module',
                'owlcarousel2'
              ) . '/js/owlcarousel2.nav.js' => array('scope' => 'footer'),
            ),
          ),
        );
        $data['navigation'] = drupal_render($output);
      }
    }
  }
  elseif ($block->module == 'nodeblock') {
    $nid = $block->delta;
    $node = node_load($nid);
    if ($node->type == 'owl_carousel_slideshow') {
      $settings = owlcarousel2_get_settings($node->nid);
      if ($settings['nav'] && $settings['nav_in_block_heading']) {
        $output = array(
          '#prefix' => '<div class="owl-block-nav">',
          '#suffix' => '</div>',
          'prev' => array(
            '#prefix' => '<div class="owl-block-prev" name="node-' . $node->nid . '">',
            '#suffix' => '</div>',
            '#markup' => $settings['nav_prev_text'],
          ),
          'next' => array(
            '#prefix' => '<div class="owl-block-next" name="node-' . $node->nid . '">',
            '#suffix' => '</div>',
            '#markup' => $settings['nav_next_text'],
          ),
          '#attached' => array(
            'js' => array(
              drupal_get_path(
                'module',
                'owlcarousel2'
              ) . '/js/owlcarousel2.nav.js' => array('scope' => 'footer'),
            ),
          ),
        );
        $data['navigation'] = drupal_render($output);
      }
    }
  }
}

function owlcarousel2_inline_entity_form_entity_form_alter(
  &$form,
  &$form_state
) {
  if ($form['#entity']->type == 'owl_carousel_slideshow') {
    $settings = array();
    if (!empty($form['#entity']->settings)) {
      $settings = $form['#entity']->settings;
    }
    elseif (!empty($form_state['values']['nid'])) {
      $settings = owlcarousel2_get_settings($form_state['values']['nid']);
    }

    form_load_include($form_state, 'inc', 'owlcarousel2', 'owlcarousel2.form');
    owlcarousel2_base_form($form, $form_state, $settings);
  }
}

/**
 * Implements hook_node_validate().
 */
function owlcarousel2_node_validate($node, $form, &$form_state) {
  if ($node->type == 'owl_carousel_slideshow') {
    owlcarousel2_slideshow_node_form_validate($form, $form_state);
  }
}

/**
 * Implements hook_node_submit().
 */
function owlcarousel2_node_submit($node, $form, &$form_state) {
  if ($node->type == 'owl_carousel_slideshow') {
    owlcarousel2_slideshow_node_form_submit($form, $form_state);
  }
}

/**
 * Implements hook_entity_insert().
 */
function owlcarousel2_entity_insert($entity, $type) {
  if ($type == 'node' && $entity->type == 'owl_carousel_slideshow') {
    if (!empty($entity->nid) && !empty($entity->settings)) {
      owlcarousel2_save_settings($entity->nid, $entity->settings);
    }
  }
}

/**
 * Implements hook_entity_update().
 */
function owlcarousel2_entity_update($entity, $type) {
  if ($type == 'node' && $entity->type == 'owl_carousel_slideshow') {
    if (!empty($entity->nid) && !empty($entity->settings)) {
      owlcarousel2_save_settings($entity->nid, $entity->settings);
    }
  }
}

/**
 * Saves owl carousel settings to the database.
 *
 * @param int $nid
 *   Node id.
 * @param array $settings
 *   Owl carousel form settings array.
 */
function owlcarousel2_save_settings($nid, $settings) {
  db_merge('owlcarousel2_settings')
    ->key(array('nid' => $nid))
    ->fields(
      array(
        'settings' => serialize($settings),
      )
    )
    ->execute();
}